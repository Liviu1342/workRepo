<Activity mc:Ignorable="sap sap2010" x:Class="File" this:File.newFolder="C:\\Work\\Test" this:File.newFile="myTestFile.txt" this:File.myText="Hello world!" this:File.newDestinationFolder="C:\\Work\\Test\\Archived" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:uascw="clr-namespace:UiPath.Activities.System.Compression.Workflow;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="newFolder" Type="InArgument(x:String)" />
    <x:Property Name="newFile" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="myText" Type="InArgument(x:String)" />
    <x:Property Name="newDestinationFolder" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1690.6666666666667,3272.6666666666665</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>UiPath.Activities.System.Compression.Zip</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers.Scope</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="64">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="File" sap:VirtualizedContainerService.HintSize="774,3208" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="extractedText" />
      <Variable x:TypeArguments="x:Boolean" Name="pathExists" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists" sap:VirtualizedContainerService.HintSize="732,90.66666666666667" sap2010:WorkflowViewState.IdRef="PathExists_2" PathType="Folder">
      <ui:PathExists.Exists>
        <OutArgument x:TypeArguments="x:Boolean">
          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">pathExists</CSharpReference>
        </OutArgument>
      </ui:PathExists.Exists>
      <ui:PathExists.Path>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">newFolder</CSharpValue>
        </InArgument>
      </ui:PathExists.Path>
    </ui:PathExists>
    <If sap:VirtualizedContainerService.HintSize="732,492" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">pathExists</CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,307.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,94.66666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_2">
            <ui:LogMessage.Message>
              <InArgument x:TypeArguments="x:Object">
                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">"Folder " + newFolder + " already exists! Deleting it..."</CSharpValue>
              </InArgument>
            </ui:LogMessage.Message>
          </ui:LogMessage>
          <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" sap:VirtualizedContainerService.HintSize="334,80.66666666666667" sap2010:WorkflowViewState.IdRef="Delete_2">
            <ui:Delete.Path>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">newFolder</CSharpValue>
              </InArgument>
            </ui:Delete.Path>
          </ui:Delete>
        </Sequence>
      </If.Then>
    </If>
    <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="732,80.66666666666667" sap2010:WorkflowViewState.IdRef="CreateDirectory_1">
      <ui:CreateDirectory.Path>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">newFolder</CSharpValue>
        </InArgument>
      </ui:CreateDirectory.Path>
    </ui:CreateDirectory>
    <ui:CreateFile ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create File" sap:VirtualizedContainerService.HintSize="732,135.33333333333334" sap2010:WorkflowViewState.IdRef="CreateFile_1">
      <ui:CreateFile.Name>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">newFile</CSharpValue>
        </InArgument>
      </ui:CreateFile.Name>
      <ui:CreateFile.Path>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">newFolder</CSharpValue>
        </InArgument>
      </ui:CreateFile.Path>
    </ui:CreateFile>
    <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists" sap:VirtualizedContainerService.HintSize="732,90.66666666666667" sap2010:WorkflowViewState.IdRef="PathExists_1" PathType="File">
      <ui:PathExists.Exists>
        <OutArgument x:TypeArguments="x:Boolean">
          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">pathExists</CSharpReference>
        </OutArgument>
      </ui:PathExists.Exists>
      <ui:PathExists.Path>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">newFolder+"\\"+newFile</CSharpValue>
        </InArgument>
      </ui:PathExists.Path>
    </ui:PathExists>
    <If sap:VirtualizedContainerService.HintSize="732,1906" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">pathExists</CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="486,1742" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="si:FileInfo" Name="compressedFile" />
            <Variable x:TypeArguments="si:DirectoryInfo" Name="extractedFile" />
            <Variable x:TypeArguments="x:String" Name="contentOfExtractedfile" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" sap:VirtualizedContainerService.HintSize="444,135.33333333333334" sap2010:WorkflowViewState.IdRef="WriteTextFile_1">
            <ui:WriteTextFile.FileName>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">newFolder+"\\"+newFile</CSharpValue>
              </InArgument>
            </ui:WriteTextFile.FileName>
            <ui:WriteTextFile.Text>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">myText</CSharpValue>
              </InArgument>
            </ui:WriteTextFile.Text>
          </ui:WriteTextFile>
          <ui:ReadTextFile File="{x:Null}" DisplayName="Read Text File" sap:VirtualizedContainerService.HintSize="444,80.66666666666667" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
            <ui:ReadTextFile.Content>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">extractedText</CSharpReference>
              </OutArgument>
            </ui:ReadTextFile.Content>
            <ui:ReadTextFile.FileName>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">newFolder+"\\"+newFile</CSharpValue>
              </InArgument>
            </ui:ReadTextFile.FileName>
          </ui:ReadTextFile>
          <ui:CheckTrue DisplayName="Check True" ErrorMessage="The text found in the file is not the expected one" sap:VirtualizedContainerService.HintSize="444,86.66666666666667" sap2010:WorkflowViewState.IdRef="CheckTrue_1">
            <ui:CheckTrue.Expression>
              <InArgument x:TypeArguments="x:Boolean">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">extractedText.Equals(myText)</CSharpValue>
              </InArgument>
            </ui:CheckTrue.Expression>
          </ui:CheckTrue>
          <ui:AppendLine File="{x:Null}" DisplayName="Append Line" sap:VirtualizedContainerService.HintSize="444,135.33333333333334" sap2010:WorkflowViewState.IdRef="AppendLine_1" Text="This is a new line added through the Append Line activity" UseDefaultEncoding="False">
            <ui:AppendLine.FileName>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">newFolder+"\\"+newFile</CSharpValue>
              </InArgument>
            </ui:AppendLine.FileName>
          </ui:AppendLine>
          <uascw:CompressFiles CompressedResource="{x:Null}" Password="{x:Null}" ResourcesToArchive="{x:Null}" SecurePassword="{x:Null}" CodePage="Default" CompressionLevel="Normal" DisplayName="Compress/Zip Files" EncryptionAlgorithm="Classic" sap:VirtualizedContainerService.HintSize="444,219.33333333333334" sap2010:WorkflowViewState.IdRef="CompressFiles_1" OverrideExistingFile="True">
            <uascw:CompressFiles.CompressedFileInfo>
              <OutArgument x:TypeArguments="si:FileInfo">
                <CSharpReference x:TypeArguments="si:FileInfo" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">compressedFile</CSharpReference>
              </OutArgument>
            </uascw:CompressFiles.CompressedFileInfo>
            <uascw:CompressFiles.CompressedFileName>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">newFile.Replace(".txt","")+"Compressed"</CSharpValue>
              </InArgument>
            </uascw:CompressFiles.CompressedFileName>
            <uascw:CompressFiles.ContentToArchive>
              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">newFolder+"\\"+newFile</CSharpValue>
                </InArgument>
              </scg:List>
            </uascw:CompressFiles.ContentToArchive>
          </uascw:CompressFiles>
          <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="444,80.66666666666667" sap2010:WorkflowViewState.IdRef="CreateDirectory_2">
            <ui:CreateDirectory.Path>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">newDestinationFolder</CSharpValue>
              </InArgument>
            </ui:CreateDirectory.Path>
          </ui:CreateDirectory>
          <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="444,163.33333333333334" sap2010:WorkflowViewState.IdRef="MoveFile_1">
            <ui:MoveFile.Destination>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">newDestinationFolder</CSharpValue>
              </InArgument>
            </ui:MoveFile.Destination>
            <ui:MoveFile.Path>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">compressedFile.FullName</CSharpValue>
              </InArgument>
            </ui:MoveFile.Path>
          </ui:MoveFile>
          <uascw:ExtractFiles Content="{x:Null}" File="{x:Null}" Password="{x:Null}" CodePage="Default" DisplayName="Extract/Unzip Files" ExtractToADedicatedFolder="True" sap:VirtualizedContainerService.HintSize="444,213.33333333333334" sap2010:WorkflowViewState.IdRef="ExtractFiles_1" SkipUnsupportedFiles="False">
            <uascw:ExtractFiles.DestinationFolder>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">newDestinationFolder</CSharpValue>
              </InArgument>
            </uascw:ExtractFiles.DestinationFolder>
            <uascw:ExtractFiles.DestinationFolderInfo>
              <OutArgument x:TypeArguments="si:DirectoryInfo">
                <CSharpReference x:TypeArguments="si:DirectoryInfo" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">extractedFile</CSharpReference>
              </OutArgument>
            </uascw:ExtractFiles.DestinationFolderInfo>
            <uascw:ExtractFiles.FileToExtract>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">newDestinationFolder+"\\"+compressedFile.Name</CSharpValue>
              </InArgument>
            </uascw:ExtractFiles.FileToExtract>
          </uascw:ExtractFiles>
          <ui:ReadTextFile File="{x:Null}" DisplayName="Read Text File" sap:VirtualizedContainerService.HintSize="444,80.66666666666667" sap2010:WorkflowViewState.IdRef="ReadTextFile_2">
            <ui:ReadTextFile.Content>
              <OutArgument x:TypeArguments="x:String">
                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">contentOfExtractedfile</CSharpReference>
              </OutArgument>
            </ui:ReadTextFile.Content>
            <ui:ReadTextFile.FileName>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">extractedFile.FullName+"\\"+newFile</CSharpValue>
              </InArgument>
            </ui:ReadTextFile.FileName>
          </ui:ReadTextFile>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="444,94.66666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn">
            <ui:LogMessage.Message>
              <InArgument x:TypeArguments="x:Object">
                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">contentOfExtractedfile</CSharpValue>
              </InArgument>
            </ui:LogMessage.Message>
          </ui:LogMessage>
        </Sequence>
      </If.Then>
      <If.Else>
        <Throw sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2">
          <InArgument x:TypeArguments="s:Exception">
            <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">new Exception("The path " + newFolder+"\\"+newFile + " does not exist!!")</CSharpValue>
          </InArgument>
        </Throw>
      </If.Else>
    </If>
    <ui:Delete ContinueOnError="{x:Null}" ResourceFile="{x:Null}" sap:VirtualizedContainerService.HintSize="732,80.66666666666667" sap2010:WorkflowViewState.IdRef="Delete_1">
      <ui:Delete.Path>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">newFolder</CSharpValue>
        </InArgument>
      </ui:Delete.Path>
    </ui:Delete>
  </Sequence>
</Activity>