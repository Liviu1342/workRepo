<Activity mc:Ignorable="sap sap2010" x:Class="Storage" this:Storage.folderPath="test" this:Storage.storageBucketName="System Activities Bucket" this:Storage.path="path" this:Storage.in_FileName="simple text file.txt" this:Storage.in_TextToWrite="blabla" this:Storage.in_DownloadLocation="C:\\Work\\Test\\SystemActivities\\Files" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="folderPath" Type="InArgument(x:String)" />
    <x:Property Name="storageBucketName" Type="InArgument(x:String)" />
    <x:Property Name="path" Type="InArgument(x:String)" />
    <x:Property Name="destination" Type="InArgument(x:String)" />
    <x:Property Name="directory" Type="InArgument(x:String)" />
    <x:Property Name="listStorageFilesResult" Type="OutArgument(scg:IEnumerable(ucas:StorageFileInfo))" />
    <x:Property Name="in_FileName" Type="InArgument(x:String)" />
    <x:Property Name="in_TextToWrite" Type="InArgument(x:String)" />
    <x:Property Name="out_CurrentFiles" Type="OutArgument(scg:IEnumerable(ucas:StorageFileInfo))" />
    <x:Property Name="out_FileFound" Type="OutArgument(x:Boolean)" />
    <x:Property Name="BreakTriggerScopeInArgument" Type="InArgument(x:String)" />
    <x:Property Name="out_FileName" Type="OutArgument(upr:ILocalResource)" />
    <x:Property Name="in_DownloadLocation" Type="InArgument(x:String)" />
    <x:Property Name="out_DownloadedFileExists" Type="InArgument(x:Boolean)" />
    <x:Property Name="out_FilesInStorageBucketAfterDelete" Type="OutArgument(scg:IEnumerable(ucas:StorageFileInfo))" />
    <x:Property Name="out_FileExistsAfterDelete" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_FileAfterWriting" Type="OutArgument(x:String)" />
    <x:Property Name="out_DownloadedFileText" Type="OutArgument(x:String)" />
  </x:Members>
  <this:Storage.destination>
    <InArgument x:TypeArguments="x:String" />
  </this:Storage.destination>
  <this:Storage.directory>
    <InArgument x:TypeArguments="x:String" />
  </this:Storage.directory>
  <this:Storage.out_DownloadedFileExists>
    <InArgument x:TypeArguments="x:Boolean" />
  </this:Storage.out_DownloadedFileExists>
  <sap2010:Annotation.AnnotationText>UPTF00000088eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8VmVyc2lvbj5rX19CYWNraW5nRmllbGQiOjF9</sap2010:Annotation.AnnotationText>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1040,5126.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Storage" sap:VirtualizedContainerService.HintSize="655.2,5061.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="folderExists" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:FolderExistsX DisplayName="Folder Exists" sap:VirtualizedContainerService.HintSize="592.8,134.4" sap2010:WorkflowViewState.IdRef="FolderExistsX_1">
      <ui:FolderExistsX.Exists>
        <OutArgument x:TypeArguments="x:Boolean">
          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">folderExists</CSharpReference>
        </OutArgument>
      </ui:FolderExistsX.Exists>
      <ui:FolderExistsX.Path>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">in_DownloadLocation</CSharpValue>
        </InArgument>
      </ui:FolderExistsX.Path>
    </ui:FolderExistsX>
    <If sap:VirtualizedContainerService.HintSize="592.8,448.8" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">folderExists</CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="449.6,192.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:DeleteFolderX DisplayName="Delete Folder" sap:VirtualizedContainerService.HintSize="387.2,80.8" sap2010:WorkflowViewState.IdRef="DeleteFolderX_1" Recursive="True">
            <ui:DeleteFolderX.Path>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">in_DownloadLocation</CSharpValue>
              </InArgument>
            </ui:DeleteFolderX.Path>
          </ui:DeleteFolderX>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="449.6,104.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="592.8,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_1">
      <ui:CreateDirectory.Path>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">in_DownloadLocation</CSharpValue>
        </InArgument>
      </ui:CreateDirectory.Path>
    </ui:CreateDirectory>
    <ucas:UploadStorageFile FileResource="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Upload Storage File" sap:VirtualizedContainerService.HintSize="592.8,241.6" sap2010:WorkflowViewState.IdRef="UploadStorageFile_2">
      <ucas:UploadStorageFile.Destination>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">in_FileName</CSharpValue>
        </InArgument>
      </ucas:UploadStorageFile.Destination>
      <ucas:UploadStorageFile.FolderPath>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">folderPath</CSharpValue>
        </InArgument>
      </ucas:UploadStorageFile.FolderPath>
      <ucas:UploadStorageFile.Path>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">"Tools\\" + in_FileName</CSharpValue>
        </InArgument>
      </ucas:UploadStorageFile.Path>
      <ucas:UploadStorageFile.StorageBucketName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">storageBucketName</CSharpValue>
        </InArgument>
      </ucas:UploadStorageFile.StorageBucketName>
    </ucas:UploadStorageFile>
    <ucas:ListStorageFiles Filter="{x:Null}" TimeoutMS="{x:Null}" Directory="\" DisplayName="List Storage Files" sap:VirtualizedContainerService.HintSize="592.8,134.4" sap2010:WorkflowViewState.IdRef="ListStorageFiles_2" Recursive="True">
      <ucas:ListStorageFiles.FolderPath>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">folderPath</CSharpValue>
        </InArgument>
      </ucas:ListStorageFiles.FolderPath>
      <ucas:ListStorageFiles.Result>
        <OutArgument x:TypeArguments="scg:IEnumerable(ucas:StorageFileInfo)">
          <CSharpReference x:TypeArguments="scg:IEnumerable(ucas:StorageFileInfo)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">out_CurrentFiles</CSharpReference>
        </OutArgument>
      </ucas:ListStorageFiles.Result>
      <ucas:ListStorageFiles.StorageBucketName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">storageBucketName</CSharpValue>
        </InArgument>
      </ucas:ListStorageFiles.StorageBucketName>
    </ucas:ListStorageFiles>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="592.8,283.2" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,204.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="387.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1">
            <ui:LogMessage.Message>
              <InArgument x:TypeArguments="x:Object">
                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">"Found " + out_CurrentFiles.Count().ToString() + " files in bucket: " + storageBucketName</CSharpValue>
              </InArgument>
            </ui:LogMessage.Message>
          </ui:LogMessage>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:ForEach x:TypeArguments="ucas:StorageFileInfo" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="592.8,2484.8" sap2010:WorkflowViewState.IdRef="ForEach`1_2">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="ucas:StorageFileInfo">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ucas:StorageFileInfo" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="538.4,2283.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If sap:VirtualizedContainerService.HintSize="495.2,2193.6" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">file.FileFullPath.Equals(in_FileName)</CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="461.6,1937.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="399.2,80.8" sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">out_FileFound</CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ucas:WriteStorageText TimeoutMS="{x:Null}" DisplayName="Write Storage Text" sap:VirtualizedContainerService.HintSize="399.2,188" sap2010:WorkflowViewState.IdRef="WriteStorageText_2">
                    <ucas:WriteStorageText.FolderPath>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">folderPath</CSharpValue>
                      </InArgument>
                    </ucas:WriteStorageText.FolderPath>
                    <ucas:WriteStorageText.Path>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">in_FileName</CSharpValue>
                      </InArgument>
                    </ucas:WriteStorageText.Path>
                    <ucas:WriteStorageText.StorageBucketName>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">storageBucketName</CSharpValue>
                      </InArgument>
                    </ucas:WriteStorageText.StorageBucketName>
                    <ucas:WriteStorageText.Text>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">in_TextToWrite</CSharpValue>
                      </InArgument>
                    </ucas:WriteStorageText.Text>
                  </ucas:WriteStorageText>
                  <ucas:ReadStorageText TimeoutMS="{x:Null}" DisplayName="Read Storage Text" sap:VirtualizedContainerService.HintSize="399.2,134.4" sap2010:WorkflowViewState.IdRef="ReadStorageText_2">
                    <ucas:ReadStorageText.FolderPath>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">folderPath</CSharpValue>
                      </InArgument>
                    </ucas:ReadStorageText.FolderPath>
                    <ucas:ReadStorageText.Path>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">in_FileName</CSharpValue>
                      </InArgument>
                    </ucas:ReadStorageText.Path>
                    <ucas:ReadStorageText.Result>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">out_FileAfterWriting</CSharpReference>
                      </OutArgument>
                    </ucas:ReadStorageText.Result>
                    <ucas:ReadStorageText.StorageBucketName>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">storageBucketName</CSharpValue>
                      </InArgument>
                    </ucas:ReadStorageText.StorageBucketName>
                  </ucas:ReadStorageText>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="399.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2">
                    <ui:LogMessage.Message>
                      <InArgument x:TypeArguments="x:Object">
                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">"Storage.xaml: File after writing: " + out_FileAfterWriting</CSharpValue>
                      </InArgument>
                    </ui:LogMessage.Message>
                  </ui:LogMessage>
                  <ucas:DownloadStorageFile TimeoutMS="{x:Null}" DisplayName="Download Storage File" sap:VirtualizedContainerService.HintSize="399.2,134.4" sap2010:WorkflowViewState.IdRef="DownloadStorageFile_2">
                    <ucas:DownloadStorageFile.Destination>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">in_DownloadLocation + "\\" + in_FileName</CSharpValue>
                      </InArgument>
                    </ucas:DownloadStorageFile.Destination>
                    <ucas:DownloadStorageFile.FolderPath>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">folderPath</CSharpValue>
                      </InArgument>
                    </ucas:DownloadStorageFile.FolderPath>
                    <ucas:DownloadStorageFile.Path>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">in_FileName</CSharpValue>
                      </InArgument>
                    </ucas:DownloadStorageFile.Path>
                    <ucas:DownloadStorageFile.Result>
                      <OutArgument x:TypeArguments="upr:ILocalResource">
                        <CSharpReference x:TypeArguments="upr:ILocalResource" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">out_FileName</CSharpReference>
                      </OutArgument>
                    </ucas:DownloadStorageFile.Result>
                    <ucas:DownloadStorageFile.StorageBucketName>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">storageBucketName</CSharpValue>
                      </InArgument>
                    </ucas:DownloadStorageFile.StorageBucketName>
                  </ucas:DownloadStorageFile>
                  <ui:ReadTextFile File="{x:Null}" DisplayName="Read Text File" sap:VirtualizedContainerService.HintSize="399.2,80.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
                    <ui:ReadTextFile.Content>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">out_DownloadedFileText</CSharpReference>
                      </OutArgument>
                    </ui:ReadTextFile.Content>
                    <ui:ReadTextFile.FileName>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">in_DownloadLocation + "\\" + in_FileName</CSharpValue>
                      </InArgument>
                    </ui:ReadTextFile.FileName>
                  </ui:ReadTextFile>
                  <If sap:VirtualizedContainerService.HintSize="399.2,460.8" sap2010:WorkflowViewState.IdRef="If_5">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">out_DownloadedFileText.Equals(out_FileAfterWriting)</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="365.6,104.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="365.6,204.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="337.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">"Storage.xaml: File contents did not match!!"</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:FileExistsX DisplayName="File Exists" sap:VirtualizedContainerService.HintSize="399.2,134.4" sap2010:WorkflowViewState.IdRef="FileExistsX_1">
                    <ui:FileExistsX.Exists>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">out_DownloadedFileExists</CSharpReference>
                      </OutArgument>
                    </ui:FileExistsX.Exists>
                    <ui:FileExistsX.Path>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">in_DownloadLocation + "\\" + in_FileName</CSharpValue>
                      </InArgument>
                    </ui:FileExistsX.Path>
                  </ui:FileExistsX>
                  <ucas:DeleteStorageFile TimeoutMS="{x:Null}" DisplayName="Delete Storage File" sap:VirtualizedContainerService.HintSize="399.2,134.4" sap2010:WorkflowViewState.IdRef="DeleteStorageFile_2">
                    <ucas:DeleteStorageFile.FolderPath>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">folderPath</CSharpValue>
                      </InArgument>
                    </ucas:DeleteStorageFile.FolderPath>
                    <ucas:DeleteStorageFile.Path>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">in_FileName</CSharpValue>
                      </InArgument>
                    </ucas:DeleteStorageFile.Path>
                    <ucas:DeleteStorageFile.StorageBucketName>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">storageBucketName</CSharpValue>
                      </InArgument>
                    </ucas:DeleteStorageFile.StorageBucketName>
                  </ucas:DeleteStorageFile>
                  <ui:Break sap:VirtualizedContainerService.HintSize="399.2,24.8" sap2010:WorkflowViewState.IdRef="Break_1" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="400,104.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <ui:ForEach.Values>
        <InArgument x:TypeArguments="sc:IEnumerable">
          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">out_CurrentFiles</CSharpValue>
        </InArgument>
      </ui:ForEach.Values>
    </ui:ForEach>
    <ucas:ListStorageFiles Filter="{x:Null}" TimeoutMS="{x:Null}" Directory="\" DisplayName="List Storage Files" sap:VirtualizedContainerService.HintSize="592.8,134.4" sap2010:WorkflowViewState.IdRef="ListStorageFiles_3" Recursive="True">
      <ucas:ListStorageFiles.FolderPath>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">folderPath</CSharpValue>
        </InArgument>
      </ucas:ListStorageFiles.FolderPath>
      <ucas:ListStorageFiles.Result>
        <OutArgument x:TypeArguments="scg:IEnumerable(ucas:StorageFileInfo)">
          <CSharpReference x:TypeArguments="scg:IEnumerable(ucas:StorageFileInfo)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">out_FilesInStorageBucketAfterDelete</CSharpReference>
        </OutArgument>
      </ucas:ListStorageFiles.Result>
      <ucas:ListStorageFiles.StorageBucketName>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">storageBucketName</CSharpValue>
        </InArgument>
      </ucas:ListStorageFiles.StorageBucketName>
    </ucas:ListStorageFiles>
    <ui:ForEach x:TypeArguments="ucas:StorageFileInfo" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="592.8,687.2" sap2010:WorkflowViewState.IdRef="ForEach`1_3">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="ucas:StorageFileInfo">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ucas:StorageFileInfo" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="557.6,561.6" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If sap:VirtualizedContainerService.HintSize="495.2,449.6" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">file.FileFullPath.Equals(in_FileName)</CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="461.6,193.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="399.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">out_FileExistsAfterDelete</CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="400,104.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <ui:ForEach.Values>
        <InArgument x:TypeArguments="sc:IEnumerable">
          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">out_FilesInStorageBucketAfterDelete</CSharpValue>
        </InArgument>
      </ui:ForEach.Values>
    </ui:ForEach>
  </Sequence>
</Activity>