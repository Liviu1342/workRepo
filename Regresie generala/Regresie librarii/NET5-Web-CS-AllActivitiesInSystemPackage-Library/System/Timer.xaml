<Activity mc:Ignorable="sap sap2010" x:Class="Dialog" this:Dialog.in_TimeoutMessage="Timeout expired!!" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TimerScope" Type="InArgument(x:TimeSpan)" />
    <x:Property Name="in_TimeoutMessage" Type="InArgument(x:String)" />
    <x:Property Name="in_DelayValue" Type="InArgument(x:TimeSpan)" />
  </x:Members>
  <this:Dialog.in_TimerScope>
    <InArgument x:TypeArguments="x:TimeSpan">
      <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">new TimeSpan(0,0,30)</CSharpValue>
    </InArgument>
  </this:Dialog.in_TimerScope>
  <this:Dialog.in_DelayValue>
    <InArgument x:TypeArguments="x:TimeSpan">
      <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">new TimeSpan(0, 0, 5)</CSharpValue>
    </InArgument>
  </this:Dialog.in_DelayValue>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1086.4,4592.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="46">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Timer" sap:VirtualizedContainerService.HintSize="779.2,4528" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="716.8,4416" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:TimeoutScope DisplayName="Timeout Scope" sap:VirtualizedContainerService.HintSize="680,4184.8" sap2010:WorkflowViewState.IdRef="TimeoutScope_1">
          <ui:TimeoutScope.Body>
            <ActivityAction x:TypeArguments="Activity">
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="602.4,3998.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <Sequence.Variables>
                  <Variable x:TypeArguments="ui:Timer" Name="timerValue" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:StartTimer DisplayName="Start Timer" sap:VirtualizedContainerService.HintSize="540,90.4" sap2010:WorkflowViewState.IdRef="StartTimer_1">
                  <ui:StartTimer.Timer>
                    <OutArgument x:TypeArguments="ui:Timer">
                      <CSharpReference x:TypeArguments="ui:Timer" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">timerValue</CSharpReference>
                    </OutArgument>
                  </ui:StartTimer.Timer>
                </ui:StartTimer>
                <Delay sap:VirtualizedContainerService.HintSize="540,90.4" sap2010:WorkflowViewState.IdRef="Delay_1">
                  <InArgument x:TypeArguments="x:TimeSpan">
                    <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">in_DelayValue</CSharpValue>
                  </InArgument>
                </Delay>
                <If sap:VirtualizedContainerService.HintSize="540,635.2" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">timerValue.IsRunning</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="462.4,254.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_1">
                        <ui:LogMessage.Level>
                          <InArgument x:TypeArguments="ui:LogLevel">
                            <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">UiPath.Core.Activities.LogLevel.Warn</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Level>
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">"Elapsed: " + timerValue.Elapsed.Seconds.ToString() + " seconds"</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="462.4,202.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Throw sap:VirtualizedContainerService.HintSize="400,90.4" sap2010:WorkflowViewState.IdRef="Throw_1">
                        <InArgument x:TypeArguments="s:Exception">
                          <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">new Exception("Timer is not running!!!")</CSharpValue>
                        </InArgument>
                      </Throw>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:StopTimer DisplayName="Stop Timer" sap:VirtualizedContainerService.HintSize="540,90.4" sap2010:WorkflowViewState.IdRef="StopTimer_1">
                  <ui:StopTimer.Timer>
                    <InArgument x:TypeArguments="ui:Timer">
                      <CSharpValue x:TypeArguments="ui:Timer" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">timerValue</CSharpValue>
                    </InArgument>
                  </ui:StopTimer.Timer>
                </ui:StopTimer>
                <If sap:VirtualizedContainerService.HintSize="540,635.2" sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">timerValue.IsRunning</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="462.4,202.4" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Throw sap:VirtualizedContainerService.HintSize="400,90.4" sap2010:WorkflowViewState.IdRef="Throw_2">
                        <InArgument x:TypeArguments="s:Exception">
                          <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">new Exception("Timer is running after the Stop command!!!")</CSharpValue>
                        </InArgument>
                      </Throw>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="462.4,254.4" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_2">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">"Timer not runnning, as expected"</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:ResumeTimer DisplayName="Resume Timer" sap:VirtualizedContainerService.HintSize="540,90.4" sap2010:WorkflowViewState.IdRef="ResumeTimer_1">
                  <ui:ResumeTimer.Timer>
                    <InArgument x:TypeArguments="ui:Timer">
                      <CSharpValue x:TypeArguments="ui:Timer" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">timerValue</CSharpValue>
                    </InArgument>
                  </ui:ResumeTimer.Timer>
                </ui:ResumeTimer>
                <Delay sap:VirtualizedContainerService.HintSize="540,90.4" sap2010:WorkflowViewState.IdRef="Delay_2">
                  <InArgument x:TypeArguments="x:TimeSpan">
                    <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">in_DelayValue</CSharpValue>
                  </InArgument>
                </Delay>
                <If sap:VirtualizedContainerService.HintSize="540,635.2" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">timerValue.IsRunning</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="462.4,254.4" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_3">
                        <ui:LogMessage.Level>
                          <InArgument x:TypeArguments="ui:LogLevel">
                            <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">UiPath.Core.Activities.LogLevel.Warn</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Level>
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">"Elapsed: " + timerValue.Elapsed.Seconds.ToString() + " seconds"</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="462.4,202.4" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Throw sap:VirtualizedContainerService.HintSize="400,90.4" sap2010:WorkflowViewState.IdRef="Throw_3">
                        <InArgument x:TypeArguments="s:Exception">
                          <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">new Exception("Timer is not running!!!")</CSharpValue>
                        </InArgument>
                      </Throw>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:StopTimer DisplayName="Stop Timer" sap:VirtualizedContainerService.HintSize="540,90.4" sap2010:WorkflowViewState.IdRef="StopTimer_2">
                  <ui:StopTimer.Timer>
                    <InArgument x:TypeArguments="ui:Timer">
                      <CSharpValue x:TypeArguments="ui:Timer" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">timerValue</CSharpValue>
                    </InArgument>
                  </ui:StopTimer.Timer>
                </ui:StopTimer>
                <If sap:VirtualizedContainerService.HintSize="540,635.2" sap2010:WorkflowViewState.IdRef="If_5">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">timerValue.IsRunning</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="462.4,202.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Throw sap:VirtualizedContainerService.HintSize="400,90.4" sap2010:WorkflowViewState.IdRef="Throw_4">
                        <InArgument x:TypeArguments="s:Exception">
                          <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">new Exception("Timer is running after the Stop command!!!")</CSharpValue>
                        </InArgument>
                      </Throw>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="462.4,254.4" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_4">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">"Timer not runnning, as expected"</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:ResetTimer DisplayName="Reset Timer" sap:VirtualizedContainerService.HintSize="540,90.4" sap2010:WorkflowViewState.IdRef="ResetTimer_1">
                  <ui:ResetTimer.Timer>
                    <InArgument x:TypeArguments="ui:Timer">
                      <CSharpValue x:TypeArguments="ui:Timer" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">timerValue</CSharpValue>
                    </InArgument>
                  </ui:ResetTimer.Timer>
                </ui:ResetTimer>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="540,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_5">
                  <ui:LogMessage.Level>
                    <InArgument x:TypeArguments="ui:LogLevel">
                      <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">UiPath.Core.Activities.LogLevel.Warn</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Level>
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">"Timer value after reset: " + timerValue.ElapsedMilliseconds.ToString()</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                </ui:LogMessage>
                <Delay sap:VirtualizedContainerService.HintSize="540,90.4" sap2010:WorkflowViewState.IdRef="Delay_3">
                  <InArgument x:TypeArguments="x:TimeSpan">
                    <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">in_TimerScope</CSharpValue>
                  </InArgument>
                </Delay>
              </Sequence>
            </ActivityAction>
          </ui:TimeoutScope.Body>
          <ui:TimeoutScope.ThrowExceptionAfter>
            <InArgument x:TypeArguments="x:TimeSpan">
              <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">in_TimerScope</CSharpValue>
            </InArgument>
          </ui:TimeoutScope.ThrowExceptionAfter>
          <ui:TimeoutScope.TimeoutMessage>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">in_TimeoutMessage</CSharpValue>
            </InArgument>
          </ui:TimeoutScope.TimeoutMessage>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:TimeoutScope>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="683.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="602.4,681.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If sap:VirtualizedContainerService.HintSize="540,569.6" sap2010:WorkflowViewState.IdRef="If_6">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">exception.Message.Contains(in_TimeoutMessage)</CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="462.4,254.4" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_6">
                      <ui:LogMessage.Message>
                        <InArgument x:TypeArguments="x:Object">
                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">"Timeout scope threw the expected exception"</CSharpValue>
                        </InArgument>
                      </ui:LogMessage.Message>
                    </ui:LogMessage>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="462.4,136.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Rethrow sap:VirtualizedContainerService.HintSize="400,24.8" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>