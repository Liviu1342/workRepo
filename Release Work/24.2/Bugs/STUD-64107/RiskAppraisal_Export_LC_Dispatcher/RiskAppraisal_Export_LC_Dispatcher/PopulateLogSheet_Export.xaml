<Activity mc:Ignorable="sap sap2010" x:Class="PopulateLogSheet" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TFReference" Type="InArgument(x:String)" />
    <x:Property Name="in_ApplicantName" Type="InArgument(x:String)" />
    <x:Property Name="in_BeneficiaryName" Type="InArgument(x:String)" />
    <x:Property Name="in_BeneficiaryCountry" Type="InArgument(x:String)" />
    <x:Property Name="in_PortOfLoading" Type="InArgument(x:String)" />
    <x:Property Name="in_PortOfDischarge" Type="InArgument(x:String)" />
    <x:Property Name="in_GoodsShort" Type="InArgument(x:String)" />
    <x:Property Name="in_Currency" Type="InArgument(x:String)" />
    <x:Property Name="in_Amount" Type="InArgument(x:String)" />
    <x:Property Name="in_AvailableWIthCountry" Type="InArgument(x:String)" />
    <x:Property Name="in_AvailableWithBank" Type="InArgument(x:String)" />
    <x:Property Name="in_ExpiryDate" Type="InArgument(x:String)" />
    <x:Property Name="in_LCNumber" Type="InArgument(x:String)" />
    <x:Property Name="in_ApplicantCountry" Type="InArgument(x:String)" />
    <x:Property Name="out_bol_InvalidError" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_IssBnkCtryRisk" Type="InArgument(x:String)" />
    <x:Property Name="in_IssBnkName" Type="InArgument(x:String)" />
    <x:Property Name="in_BeneficiaryRating" Type="InArgument(x:String)" />
    <x:Property Name="in_LcCurrencyType" Type="InArgument(x:String)" />
    <x:Property Name="in_LcAmount" Type="InArgument(x:String)" />
    <x:Property Name="in_AvailableWith" Type="InArgument(x:String)" />
    <x:Property Name="in_LoadPortIfDiff" Type="InArgument(x:String)" />
    <x:Property Name="in_TenorAndValidity" Type="InArgument(x:String)" />
    <x:Property Name="in_config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_PortofLoadingCountry" Type="InArgument(x:String)" />
    <x:Property Name="in_PortOfDischargeCountry" Type="InArgument(x:String)" />
    <x:Property Name="in_TypeOfLc" Type="InArgument(x:String)" />
    <x:Property Name="in_LogFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_blnLCDownloadSuccess" Type="InArgument(x:Boolean)" />
  </x:Members>
  <this:PopulateLogSheet.in_LogFilePath>
    <InArgument x:TypeArguments="x:String" />
  </this:PopulateLogSheet.in_LogFilePath>
  <sap:VirtualizedContainerService.HintSize>1259,8553</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="64">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="35">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Populate Log Sheet" sap:VirtualizedContainerService.HintSize="1094,8488" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_LogSheet" />
      <Variable x:TypeArguments="x:Int32" Name="int_RowCount" />
      <Variable x:TypeArguments="x:String" Name="TFColumnValue" />
      <Variable x:TypeArguments="x:String" Name="str_RowCounter" />
      <Variable x:TypeArguments="x:String" Name="row_WriteTo" />
      <Variable x:TypeArguments="x:Int32" Name="int_RowCounter" />
      <Variable x:TypeArguments="x:Boolean" Name="bol_RowPopulated" />
      <Variable x:TypeArguments="x:Int32" Name="int_NewRow" />
      <Variable x:TypeArguments="x:String" Name="str_NewRow" />
      <Variable x:TypeArguments="x:String" Name="str_dt_LogSheet" />
      <Variable x:TypeArguments="x:Boolean" Name="bol_LogFilePathExists" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="1032,133" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="EXCEL" />
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1032,52" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="462,504" sap2010:WorkflowViewState.IdRef="Sequence_24">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="This will check if this is the first run of the log sheet for the day. If so thenn the template will be used, if not then the previously generated log fiel will be used. " DisplayName="Sequence - Checks if Log fil path exists" sap:VirtualizedContainerService.HintSize="540,393" sap2010:WorkflowViewState.IdRef="Sequence_21">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:FileExistsX DisplayName="File Exists - in_LogFilePath" Exists="[bol_LogFilePathExists]" sap:VirtualizedContainerService.HintSize="338,133" sap2010:WorkflowViewState.IdRef="FileExistsX_1" Path="[in_LogFilePath]" />
            <If Condition="[bol_LogFilePathExists = True]" DisplayName="If - bol_LogFilePathExists = True" sap:VirtualizedContainerService.HintSize="338,52" sap2010:WorkflowViewState.IdRef="If_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="400,199" sap2010:WorkflowViewState.IdRef="Sequence_22">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ReadRange AddHeaders="True" DataTable="[dt_LogSheet]" DisplayName="Read Range - in_LogFilePath " sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" Range=" " SheetName="Sheet1" WorkbookPath="[in_LogFilePath]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="400,199" sap2010:WorkflowViewState.IdRef="Sequence_23">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ReadRange AddHeaders="True" DataTable="[dt_LogSheet]" DisplayName="Read Range - InConfig(&quot;Export__Bot_Logsheet&quot;)" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ReadRange_2" Range=" " SheetName="Sheet1" WorkbookPath="[in_config(&quot;Export_Bot_Logsheet&quot;).ToString]" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:ReadRange AddHeaders="True" DataTable="[dt_LogSheet]" DisplayName="Read Range - in_LogFilePath " sap:VirtualizedContainerService.HintSize="1032,88" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="Sheet1" WorkbookPath="[in_LogFilePath]">
      <ui:ReadRange.Range>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </ui:ReadRange.Range>
    </ui:ReadRange>
    <ui:OutputDataTable DataTable="[dt_LogSheet]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="1032,80" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[str_dt_LogSheet]" />
    <Assign DisplayName="Assign int_RowCounter 1" sap:VirtualizedContainerService.HintSize="1032,61" sap2010:WorkflowViewState.IdRef="Assign_15">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[int_RowCounter]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">2</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1032,61" sap2010:WorkflowViewState.IdRef="Assign_16">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[out_bol_InvalidError]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign bol_RowPopulated FALSE" sap:VirtualizedContainerService.HintSize="1032,61" sap2010:WorkflowViewState.IdRef="Assign_17">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[bol_RowPopulated]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_LogSheet]" DisplayName="For Each Row in Data Table Log Sheet" sap:VirtualizedContainerService.HintSize="1032,592" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="462,476" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign TFColumn value - Column A" sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[TFColumnValue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[row("TF Reference").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[TFColumnValue.Contains(in_TFReference)]" DisplayName="If TF Reference exists in sheet " sap:VirtualizedContainerService.HintSize="400,52" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Write LogSheet Existing Row" sap:VirtualizedContainerService.HintSize="892,6451" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="bol_UniqueItemExists" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="830,61" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_RowCounter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[int_RowCounter.ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" sap2010:Annotation.AnnotationText="This checks if the item has already been put into the log sheet perhaps an exception occurred and item had to be redone so it writes to the same row" DisplayName="Excel Process Scope Existing Row" sap:VirtualizedContainerService.HintSize="830,6125" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
                    <ueab:ExcelProcessScopeX.Body>
                      <ActivityAction x:TypeArguments="ui:IExcelProcess">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="796,5967" sap2010:WorkflowViewState.IdRef="Sequence_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="734,5856" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="[in_LogFilePath]">
                            <ueab:ExcelApplicationCard.Body>
                              <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="700,5587" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A&quot;+str_RowCounter)]" DisplayName="Write Cell TF Reference 5" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[in_TFReference.ToUpper]" />
                                  <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;B&quot;+str_RowCounter)]" DisplayName="Write Iss Bnk" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_2" Value="[in_IssBnkName.ToUpper]" />
                                  <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;C&quot;+str_RowCounter)]" DisplayName="Write Iss Bnk Ctry Risk" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_31" Value="[in_IssBnkCtryRisk.ToUpper]" />
                                  <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;D&quot;+str_RowCounter)]" DisplayName="Write Beneficiary Rating" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_45" Value="[in_BeneficiaryName.ToUpper]" />
                                  <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;E&quot;+str_RowCounter)]" DisplayName="Write Beneficiary Rating" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_3" Value="[in_beneficiaryRating.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;F&quot;+str_RowCounter)]" DisplayName="Write Beneficiary Country" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_4" Value="[in_BeneficiaryCountry.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;G&quot;+str_RowCounter)]" DisplayName="Write Cell Applicant Name" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_5" Value="[in_ApplicantName.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;H&quot;+str_RowCounter)]" DisplayName="Write Cell Applicant Country" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_6" Value="[in_ApplicantCountry.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;I&quot;+str_RowCounter)]" DisplayName="Write LC Currency Type" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_7" Value="[in_LcCurrencyType.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;J&quot;+str_RowCounter)]" DisplayName="Write LC Amount" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_8" Value="[in_LcAmount.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;k&quot;+str_RowCounter)]" DisplayName="Write Available with Bank" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_32" Value="[in_AvailableWithBank.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;L&quot;+str_RowCounter)]" DisplayName="Write Available with Country" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_33" Value="[in_AvailableWithCountry.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;M&quot;+str_RowCounter)]" DisplayName="Write Type of LC" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_10" Value="[in_TypeOfLc.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;N&quot;+str_RowCounter)]" DisplayName="Write Load Port" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_34" Value="[in_PortOfLoading.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;O&quot;+str_RowCounter)]" DisplayName="Write Load Port Country" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_35" Value="[in_PortofLoadingCountry.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;P&quot;+str_RowCounter)]" DisplayName="Write Port of Discharge" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_36" Value="[in_PortOfDischarge.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;Q&quot;+str_RowCounter)]" DisplayName="Write Port of Discharge Country" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_37" Value="[in_PortOfDischargeCountry.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;R&quot;+str_RowCounter)]" DisplayName="Write Tenor and Validity" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_12" Value="[in_TenorAndValidity.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;S&quot;+str_RowCounter)]" DisplayName="Write LC Number" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_41" Value="[in_LCNumber.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;T&quot;+str_RowCounter)]" DisplayName="Write Expiry Date" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_42" Value="[in_ExpiryDate.ToUpper]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;W&quot;+str_RowCounter)]" DisplayName="Write LCDownloadSuccess" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_47" Value="[in_blnLCDownloadSuccess.ToString]" />
                                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;X&quot;+str_RowCounter)]" DisplayName="Write GoodsDescription" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_49" Value="[in_GoodsShort]" />
                                  <Sequence DisplayName="Sequence - Check for &quot;Invaild&quot; - 1" sap:VirtualizedContainerService.HintSize="638,1098" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="576,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.Sheet(&quot;Sheet1&quot;)]" SaveTo="[dt_LogSheet]" />
                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="576,52" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="638,797" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="576,686" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[dt_LogSheet.columns]">
                                            <ui:ForEach.Body>
                                              <ActivityAction x:TypeArguments="x:Object">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="540,562" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If Condition="[dt_LogSheet.Rows(int_RowCounter-2)(item.ToString).toString = &quot;Invalid&quot;]" sap:VirtualizedContainerService.HintSize="478,451" sap2010:WorkflowViewState.IdRef="If_3">
                                                    <If.Then>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_12">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Boolean">[out_bol_InvalidError]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ForEach.Body>
                                          </ui:ForEach>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="576,686" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[dt_LogSheet.columns]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="x:Object">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="540,562" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[string.IsNullOrEmpty(dt_LogSheet.Rows(int_RowCounter-2)(item.ToString).toString) AND (item.ToString&lt;&gt;&quot;Pass or Fail&quot; AND item.ToString&lt;&gt;&quot;Error Message&quot;)]" DisplayName="If string.IsNullOrEmpty(dt_LogSheet.Rows(int_RowCounter-2)(item.ToString).toString)" sap:VirtualizedContainerService.HintSize="478,451" sap2010:WorkflowViewState.IdRef="If_6">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_19">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[out_bol_InvalidError]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEach>
                                  </Sequence>
                                </Sequence>
                              </ActivityAction>
                            </ueab:ExcelApplicationCard.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ueab:ExcelApplicationCard>
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelProcessScopeX.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ueab:ExcelProcessScopeX>
                  <Assign DisplayName="Assign bol_RowPopulated TRUE" sap:VirtualizedContainerService.HintSize="830,61" sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[bol_RowPopulated]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
            <Sequence DisplayName="Counter +1" sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_18">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[int_RowCounter]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[int_RowCounter + 1]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <Assign DisplayName="Assign int_RowCount - Number of Rows" sap:VirtualizedContainerService.HintSize="1032,61" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[int_RowCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[dt_LogSheet.RowCount]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign int_RowCount" sap:VirtualizedContainerService.HintSize="1032,61" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[int_NewRow]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[int_RowCount + 2]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign str_NewRow" sap:VirtualizedContainerService.HintSize="1032,61" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[str_NewRow]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[int_NewRow.ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[bol_RowPopulated = False]" DisplayName="If bol_RowPopulated = False" sap:VirtualizedContainerService.HintSize="1032,6626" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="954,6347" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Write LogSheet New Row" sap:VirtualizedContainerService.HintSize="892,6236" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" sap2010:Annotation.AnnotationText="This is for items that haven't been previously partially processed" DisplayName="Excel Process Scope New Row" sap:VirtualizedContainerService.HintSize="830,6125" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2">
              <ueab:ExcelProcessScopeX.Body>
                <ActivityAction x:TypeArguments="ui:IExcelProcess">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="796,6007" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="734,5896" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" WorkbookPath="[in_LogFilePath]">
                      <ueab:ExcelApplicationCard.Body>
                        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="700,5627" sap2010:WorkflowViewState.IdRef="Sequence_18">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A&quot;+str_NewRow)]" DisplayName="Write Cell TF Reference 6" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_16" Value="[in_TFReference.ToUpper]" />
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="638,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[in_IssBnkName]" />
                            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;B&quot;+str_NewRow)]" DisplayName="Write Issuing Bank Name" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_17" Value="[in_IssBnkName.ToUpper]" />
                            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;C&quot;+str_NewRow)]" DisplayName="Write Issuing Bank Ctry of Risk" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_18" Value="[in_IssBnkCtryRisk.ToUpper]" />
                            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;D&quot;+str_NewRow)]" DisplayName="Write Beneficiary Rating" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_46" Value="[in_BeneficiaryName.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;E&quot;+str_NewRow)]" DisplayName="Write Cell Beneficiary Rating" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_19" Value="[in_BeneficiaryRating.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;F&quot;+str_NewRow)]" DisplayName="Write Cell Beneficiary Country" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_20" Value="[in_BeneficiaryCountry.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;G&quot;+str_NewRow)]" DisplayName="Write Cell Applicant Name" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_21" Value="[in_ApplicantName.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;H&quot;+str_NewRow)]" DisplayName="Write Cell Applicant Country of Domicile" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_22" Value="[in_ApplicantCountry.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;I&quot;+str_NewRow)]" DisplayName="Write Cell Currency Type" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_23" Value="[in_LcCurrencyType.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;J&quot;+str_NewRow)]" DisplayName="Write Cell LC Amount" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_24" Value="[in_LcAmount.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;K&quot;+str_NewRow)]" DisplayName="Write Cell Available With Bank" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_26" Value="[in_AvailableWithBank.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;L&quot;+str_NewRow)]" DisplayName="Write Cell Available With Country" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_27" Value="[in_AvailableWIthCountry.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;M&quot;+str_NewRow)]" DisplayName="Write Type Of LC" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_28" Value="[in_TypeOfLc.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;N&quot;+str_NewRow)]" DisplayName="Write Port of Loading" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_29" Value="[in_PortOfLoading.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;O&quot;+str_NewRow)]" DisplayName="Write Port of Loading Country" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_30" Value="[in_PortofLoadingCountry.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;P&quot;+str_NewRow)]" DisplayName="Write Port of Discharge" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_38" Value="[in_PortOfDischarge.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;Q&quot;+str_NewRow)]" DisplayName="Write Port of Discharge Country" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_39" Value="[in_PortOfDischargeCountry.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;R&quot;+str_NewRow)]" DisplayName="Write Tenor and Validity" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_40" Value="[in_TenorAndValidity.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;S&quot;+str_NewRow)]" DisplayName="Write LC Number" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_43" Value="[in_LCNumber.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;T&quot;+str_NewRow)]" DisplayName="Write Expiry Date" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_44" Value="[in_ExpiryDate.ToUpper]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;W&quot;+str_NewRow)]" DisplayName="Write LCDownloadSuccess" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_48" Value="[in_blnLCDownloadSuccess.ToString]" />
                            <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;X&quot;+str_NewRow)]" DisplayName="Write GoodsDescription" sap:VirtualizedContainerService.HintSize="638,159" sap2010:WorkflowViewState.IdRef="WriteCellX_50" Value="[in_GoodsShort]" />
                            <Sequence DisplayName="Sequence - Check for &quot;Invaild&quot; - 1" sap:VirtualizedContainerService.HintSize="638,1006" sap2010:WorkflowViewState.IdRef="Sequence_17">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="576,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_2" Range="[Excel.Sheet(&quot;Sheet1&quot;)]" SaveTo="[dt_LogSheet]" />
                              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each dt_LogSheet.columns" sap:VirtualizedContainerService.HintSize="576,686" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[dt_LogSheet.columns]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:Object">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="540,562" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[dt_LogSheet.Rows(int_NewRow-2)(item.ToString).toString = &quot;&quot; AND (item.ToString&lt;&gt;&quot;Pass or Fail&quot; AND item.ToString&lt;&gt;&quot;Error Message&quot;)]" DisplayName="If dt_LogSheet.Rows(int_NewRow-2)(item.ToString).toString = &quot;&quot; AND (item.ToString&lt;&gt;&quot;Pass or Fail&quot; AND item.ToString&lt;&gt;&quot;Error Message&quot;)" sap:VirtualizedContainerService.HintSize="478,451" sap2010:WorkflowViewState.IdRef="If_4">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="400,172" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_14">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[out_bol_InvalidError]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                            </Sequence>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelApplicationCard.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:ExcelApplicationCard>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelProcessScopeX.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelProcessScopeX>
          </Sequence>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="400,103" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>