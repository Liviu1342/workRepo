<Activity mc:Ignorable="sap sap2010" x:Class="Component_Template" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="StrFailureReason" Type="OutArgument(x:String)" />
    <x:Property Name="BComplete" Type="OutArgument(x:Boolean)" />
    <x:Property Name="StrComponentRunning" Type="InArgument(x:String)" />
    <x:Property Name="StrProcessName" Type="InArgument(x:String)" />
    <x:Property Name="BRunning" Type="OutArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="If the process is in the 'Do While' loop of the Try Catch Error Handling, BErrorHandling is assigned to 'False' to ensure multiple warning messages do not appear during the looping period." Name="BErrorHandling" Type="InArgument(x:Boolean)" />
    <x:Property Name="StrOrchFolder" Type="InArgument(x:String)" />
  </x:Members>
  <this:Component_Template.StrProcessName>
    <InArgument x:TypeArguments="x:String" />
  </this:Component_Template.StrProcessName>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>639,2083</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Component_Template_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="28">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="56">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <TryCatch DisplayName="Try catch" sap:VirtualizedContainerService.HintSize="649,2058" sap2010:WorkflowViewState.IdRef="TryCatch_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch.Try>
      <Sequence DisplayName="Check for Multiple Jobs" sap:VirtualizedContainerService.HintSize="611,1809" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <Sequence.Variables>
          <Variable x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)" Name="lstJobs" />
          <Variable x:TypeArguments="scg:ICollection(x:String)" Default="[New List(Of String)]" Name="colJobsRunning" />
          <Variable x:TypeArguments="ui:QueueItem" Name="qItem" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If sap2010:Annotation.AnnotationText="Stops the &quot;Check for Multiple Jobs Started&quot; log message from appearing whilst in the Do While Error Handling loop." Condition="[BErrorHandling]" DisplayName="If in Error Handling Loop" sap:VirtualizedContainerService.HintSize="569,291" sap2010:WorkflowViewState.IdRef="If_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Else>
            <ui:LogMessage DisplayName="Log message - Component Started" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[StrComponentRunning + &quot; Started.&quot;]" />
          </If.Else>
        </If>
        <Assign sap2010:Annotation.AnnotationText="Set BRunning as True at beginning of component to ensure component can correctly handle errors that aren't related to multiple jobs running." DisplayName="Assign BRunning as True" sap:VirtualizedContainerService.HintSize="569,132" sap2010:WorkflowViewState.IdRef="Assign_10">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[BRunning]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
        <ClearCollection x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Clear collection so that on retry the collection doesn't already contain previously in progress jobs" Collection="[colJobsRunning]" DisplayName="Clear Collection" sap:VirtualizedContainerService.HintSize="569,94" sap2010:WorkflowViewState.IdRef="ClearCollection`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ClearCollection>
        <ui:GetJobs FilterBuilder="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" Top="{x:Null}" ContinueOnError="True" DisplayName="Get Jobs" Filter="State eq 'Running'" FolderPath="[StrOrchFolder]" sap:VirtualizedContainerService.HintSize="569,22" sap2010:WorkflowViewState.IdRef="GetJobs_1" Result="[lstJobs]" />
        <ui:ForEach x:TypeArguments="ui:OrchestratorJob" CurrentIndex="{x:Null}" DisplayName="For Each Running Job" sap:VirtualizedContainerService.HintSize="569,371" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[lstJobs]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="ui:OrchestratorJob">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:OrchestratorJob" Name="job" />
              </ActivityAction.Argument>
              <If Condition="[job.PackageName = StrProcessName.Replace(&quot; &quot;, &quot;_&quot;)]" DisplayName="If Job is this process, add to collection" sap:VirtualizedContainerService.HintSize="484,247" sap2010:WorkflowViewState.IdRef="If_3">
                <If.Then>
                  <AddToCollection x:TypeArguments="x:String" Collection="[colJobsRunning]" DisplayName="Add To Collection - Running" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[job.PackageName]" />
                </If.Then>
              </If>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
        <If Condition="[colJobsRunning.Count &gt; 1]" DisplayName="Number of Jobs Check" sap:VirtualizedContainerService.HintSize="569,218" sap2010:WorkflowViewState.IdRef="If_6">
          <If.Then>
            <Assign DisplayName="Assign BRunning as True" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[BRunning]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Assign BRunning as False" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[BRunning]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[Not BRunning]" DisplayName="PostCondition Check" sap:VirtualizedContainerService.HintSize="569,218" sap2010:WorkflowViewState.IdRef="If_5">
          <If.Then>
            <Assign DisplayName="Assign BComplete" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[BComplete]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Throw Exception="[New System.Exception(&quot;Multiple Jobs Running.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
          </If.Else>
        </If>
        <ui:LogMessage DisplayName="Log message - Component Complete" sap:VirtualizedContainerService.HintSize="569,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[StrComponentRunning + &quot; Complete.&quot;]" />
      </Sequence>
    </TryCatch.Try>
    <TryCatch.Catches>
      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="615,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ActivityAction x:TypeArguments="s:Exception">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Error Handling" sap:VirtualizedContainerService.HintSize="526,541" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign BComplete as False" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[BComplete]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign Failure Reason" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[StrFailureReason]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[BErrorHandling]" DisplayName="If in Error Handling Loop" sap:VirtualizedContainerService.HintSize="484,249" sap2010:WorkflowViewState.IdRef="If_9">
              <If.Else>
                <ui:LogMessage DisplayName="Log message - Component Failed &amp; Reason" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[StrComponentRunning + &quot; Failed.&quot; + vbnewline + &quot;Failure Reason: &quot; + StrFailureReason]" />
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </Catch>
      <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="615,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ActivityAction x:TypeArguments="ui:BusinessRuleException">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
          </ActivityAction.Argument>
          <Sequence DisplayName="BRE Error Handling" sap:VirtualizedContainerService.HintSize="376,345" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign BRE Failure Reason" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[StrFailureReason]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log message - Component Failed &amp; Reason" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;BRE: &quot; + StrComponentRunning + &quot; Failed.&quot; + vbnewline + &quot;Failure Reason: &quot; + StrFailureReason]" />
            <Rethrow sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
          </Sequence>
        </ActivityAction>
      </Catch>
    </TryCatch.Catches>
  </TryCatch>
</Activity>