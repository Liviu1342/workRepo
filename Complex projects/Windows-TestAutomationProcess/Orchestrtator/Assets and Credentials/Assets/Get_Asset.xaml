<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.testAsset="test_asset_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="testAsset" Type="InArgument(x:String)" />
    <x:Property Name="orchFolder" Type="InArgument(x:String)" />
    <x:Property Name="isFolderSpecified" Type="InArgument(x:Boolean)" />
    <x:Property Name="isAssetHardcoded" Type="InArgument(x:Boolean)" />
    <x:Property Name="assetValue_String" Type="OutArgument(x:String)" />
    <x:Property Name="assetValue_Object" Type="OutArgument(x:Object)" />
    <x:Property Name="isFolderHardcoded" Type="InArgument(x:Boolean)" />
  </x:Members>
  <this:Main.orchFolder>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.orchFolder>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1074.4,5050.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="25">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="48">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="832,4985.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[isFolderSpecified]" sap:VirtualizedContainerService.HintSize="769.6,4205.6" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="688,2789.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[isFolderHardcoded]" sap:VirtualizedContainerService.HintSize="625.6,2666.4" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="544,1250.4" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[isAssetHardcoded]" sap:VirtualizedContainerService.HintSize="481.6,1127.2" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Then>
                    <Sequence DisplayName="Folder specified, folder hardcoded, asset hardcoded" sap:VirtualizedContainerService.HintSize="400,480.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetRobotAsset AssetName="shared_asset_1" CacheStrategy="None" DisplayName="Get Asset" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="337.6,357.6" sap2010:WorkflowViewState.IdRef="GetRobotAsset_7">
                        <ui:GetRobotAsset.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:GetRobotAsset.TimeoutMS>
                        <ui:GetRobotAsset.Value>
                          <OutArgument x:TypeArguments="x:String">[assetValue_String]</OutArgument>
                        </ui:GetRobotAsset.Value>
                      </ui:GetRobotAsset>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Folder specified, folder hardcoded, asset as variable" sap:VirtualizedContainerService.HintSize="400,480.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetRobotAsset AssetName="[testAsset]" CacheStrategy="None" DisplayName="Get Asset" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="337.6,357.6" sap2010:WorkflowViewState.IdRef="GetRobotAsset_8">
                        <ui:GetRobotAsset.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:GetRobotAsset.TimeoutMS>
                        <ui:GetRobotAsset.Value>
                          <OutArgument x:TypeArguments="x:Object">[assetValue_Object]</OutArgument>
                        </ui:GetRobotAsset.Value>
                      </ui:GetRobotAsset>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="544,1250.4" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[isAssetHardcoded]" sap:VirtualizedContainerService.HintSize="481.6,1127.2" sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Then>
                    <Sequence DisplayName="Folder specified, folder as variable, asset hardcoded" sap:VirtualizedContainerService.HintSize="400,480.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetRobotAsset AssetName="test_asset_1" CacheStrategy="None" DisplayName="Get Asset" FolderPath="[orchFolder]" sap:VirtualizedContainerService.HintSize="337.6,357.6" sap2010:WorkflowViewState.IdRef="GetRobotAsset_5">
                        <ui:GetRobotAsset.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:GetRobotAsset.TimeoutMS>
                        <ui:GetRobotAsset.Value>
                          <OutArgument x:TypeArguments="x:String">[assetValue_String]</OutArgument>
                        </ui:GetRobotAsset.Value>
                      </ui:GetRobotAsset>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Folder Specified, folder as variable, asset as variable" sap:VirtualizedContainerService.HintSize="400,480.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetRobotAsset AssetName="[testAsset]" CacheStrategy="None" DisplayName="Get Asset" FolderPath="[orchFolder]" sap:VirtualizedContainerService.HintSize="337.6,357.6" sap2010:WorkflowViewState.IdRef="GetRobotAsset_4">
                        <ui:GetRobotAsset.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:GetRobotAsset.TimeoutMS>
                        <ui:GetRobotAsset.Value>
                          <OutArgument x:TypeArguments="x:Object">[assetValue_Object]</OutArgument>
                        </ui:GetRobotAsset.Value>
                      </ui:GetRobotAsset>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="544,1250.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[isAssetHardcoded]" sap:VirtualizedContainerService.HintSize="481.6,1127.2" sap2010:WorkflowViewState.IdRef="If_5">
            <If.Then>
              <Sequence DisplayName="Folder not specified, asset hardcoded" sap:VirtualizedContainerService.HintSize="400,480.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:GetRobotAsset AssetName="test_new_asset" CacheStrategy="None" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="337.6,357.6" sap2010:WorkflowViewState.IdRef="GetRobotAsset_9">
                  <ui:GetRobotAsset.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:GetRobotAsset.TimeoutMS>
                  <ui:GetRobotAsset.Value>
                    <OutArgument x:TypeArguments="x:String">[assetValue_String]</OutArgument>
                  </ui:GetRobotAsset.Value>
                </ui:GetRobotAsset>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Folder not specified, asset as variable" sap:VirtualizedContainerService.HintSize="400,480.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:GetRobotAsset AssetName="[testAsset]" CacheStrategy="None" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="337.6,357.6" sap2010:WorkflowViewState.IdRef="GetRobotAsset_3">
                  <ui:GetRobotAsset.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:GetRobotAsset.TimeoutMS>
                  <ui:GetRobotAsset.Value>
                    <OutArgument x:TypeArguments="x:String">[assetValue_String]</OutArgument>
                  </ui:GetRobotAsset.Value>
                </ui:GetRobotAsset>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
    <If Condition="[isFolderSpecified and (not isAssetHardcoded)]" sap:VirtualizedContainerService.HintSize="769.6,616.8" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="400,225.6" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="337.6,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_3" Message="[assetValue_Object]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="400,225.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="337.6,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[assetValue_String]" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>