<Activity mc:Ignorable="sap sap2010" x:Class="Test_Programming_DataTable" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_MyDataTable" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_ColumnToAdd" Type="InArgument(x:String)" />
    <x:Property Name="in_NewRow_Name" Type="InArgument(x:String)" />
    <x:Property Name="in_NewRow_Number" Type="InArgument(x:Int32)" />
    <x:Property Name="in_NewRow_IsTrue" Type="InArgument(x:Boolean)" />
    <x:Property Name="out_NoOfColumnsAfterAdding" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_NoOfRowsAfterAdding" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_SortedDataTable" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_FilteredDataTable" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_NameInEntry" Type="OutArgument(x:String)" />
    <x:Property Name="out_FilteredDataTableAfterRowRemoval" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_FilteredDataTableAfterColumnRemoval" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_NewValueForUpdateRowItem" Type="InArgument(x:String)" />
    <x:Property Name="out_MyDataTableAfterItemUpdate" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_FilteredDataTableAfterClear" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_BuildDataTableColumnCount" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_BuildDataTableRowCount" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_FilteredDataTableRowCount" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_FilteredDataTableColumnCount" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_FilteredDataTableAfterColumnRemovalColumnCount" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_FilteredDataTableAfterRowRemovalRowCount" Type="OutArgument(x:Int32)" />
  </x:Members>
  <this:Test_Programming_DataTable.in_ColumnToAdd>
    <InArgument x:TypeArguments="x:String" />
  </this:Test_Programming_DataTable.in_ColumnToAdd>
  <this:Test_Programming_DataTable.in_NewRow_Name>
    <InArgument x:TypeArguments="x:String" />
  </this:Test_Programming_DataTable.in_NewRow_Name>
  <this:Test_Programming_DataTable.in_NewRow_Number>
    <InArgument x:TypeArguments="x:Int32" />
  </this:Test_Programming_DataTable.in_NewRow_Number>
  <this:Test_Programming_DataTable.in_NewRow_IsTrue>
    <InArgument x:TypeArguments="x:Boolean" />
  </this:Test_Programming_DataTable.in_NewRow_IsTrue>
  <this:Test_Programming_DataTable.in_NewValueForUpdateRowItem>
    <InArgument x:TypeArguments="x:String" />
  </this:Test_Programming_DataTable.in_NewValueForUpdateRowItem>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1362.4,3863.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Test_Programming_DataTable_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Test_Programming_DataTable" sap:VirtualizedContainerService.HintSize="656,3798.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="... Given" sap:VirtualizedContainerService.HintSize="593.6,338.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423.2,226.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_ColumnToAdd]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">Is True</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_NewRow_Name]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">nelu</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[in_NewRow_Number]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">36</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Boolean">[in_NewRow_IsTrue]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_NewValueForUpdateRowItem]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">abcde</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
    </Sequence>
    <Sequence DisplayName="... When" sap:VirtualizedContainerService.HintSize="593.6,225.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="System\Programming\Data Table\DataTable_Workflow.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="System\Programming\Data Table\DataTable_Workflow.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MyDataTable">
            <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_MyDataTable" />
          </OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ColumnToAdd">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ColumnToAdd" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_NewRow_Name">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_NewRow_Name" />
          </InArgument>
          <InArgument x:TypeArguments="x:Int32" x:Key="in_NewRow_Number">
            <VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="in_NewRow_Number" />
          </InArgument>
          <InArgument x:TypeArguments="x:Boolean" x:Key="in_NewRow_IsTrue">
            <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="in_NewRow_IsTrue" />
          </InArgument>
          <OutArgument x:TypeArguments="x:Int32" x:Key="out_NoOfColumnsAfterAdding">
            <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="out_NoOfColumnsAfterAdding" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:Int32" x:Key="out_NoOfRowsAfterAdding">
            <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="out_NoOfRowsAfterAdding" />
          </OutArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_SortedDataTable">
            <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_SortedDataTable" />
          </OutArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_FilteredDataTable">
            <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_FilteredDataTable" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_NameInEntry">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="out_NameInEntry" />
          </OutArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_FilteredDataTableAfterRowRemoval">
            <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_FilteredDataTableAfterRowRemoval" />
          </OutArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_FilteredDataTableAfterColumnRemoval">
            <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_FilteredDataTableAfterColumnRemoval" />
          </OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_NewValueForUpdateRowItem">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_NewValueForUpdateRowItem" />
          </InArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_MyDataTableAfterItemUpdate">
            <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_MyDataTableAfterItemUpdate" />
          </OutArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_FilteredDataTableAfterClear">
            <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_FilteredDataTableAfterClear" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:Int32" x:Key="out_BuildDataTableColumnCount">
            <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="out_BuildDataTableColumnCount" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:Int32" x:Key="out_BuildDataTableRowCount">
            <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="out_BuildDataTableRowCount" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:Int32" x:Key="out_FilteredDataTableRowCount">
            <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="out_FilteredDataTableRowCount" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:Int32" x:Key="out_FilteredDataTableColumnCount">
            <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="out_FilteredDataTableColumnCount" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:Int32" x:Key="out_FilteredDataTableAfterColumnRemovalColumnCount">
            <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="out_FilteredDataTableAfterColumnRemovalColumnCount" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:Int32" x:Key="out_FilteredDataTableAfterRowRemovalRowCount">
            <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="out_FilteredDataTableAfterRowRemovalRowCount" />
          </OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <Sequence DisplayName="... Then" sap:VirtualizedContainerService.HintSize="593.6,3042.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="rowCounter">
          <Variable.Default>
            <Literal x:TypeArguments="x:Int32" />
          </Variable.Default>
        </Variable>
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="531.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_1" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:Int32">[out_BuildDataTableRowCount]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="531.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_2" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:Int32">[out_BuildDataTableColumnCount]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="531.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_3" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:Int32">[out_NoOfColumnsAfterAdding]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:Int32">[out_BuildDataTableColumnCount+1]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="531.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_4" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:Int32">[out_NoOfRowsAfterAdding]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:Int32">[out_BuildDataTableRowCount+1]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
      <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="While" sap:VirtualizedContainerService.HintSize="531.2,594.4" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
        <ui:InterruptibleWhile.Body>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,427.2" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="433.6,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_6" Operator="GreaterThanOrEqual" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
              <uta:VerifyExpressionWithOperator.FirstExpression>
                <InArgument x:TypeArguments="x:Int32">[String.Compare(out_SortedDataTable.Rows(rowCounter+1)("Name").ToString, out_SortedDataTable.Rows(rowCounter)("Name").ToString)]</InArgument>
              </uta:VerifyExpressionWithOperator.FirstExpression>
              <uta:VerifyExpressionWithOperator.SecondExpression>
                <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
              </uta:VerifyExpressionWithOperator.SecondExpression>
            </uta:VerifyExpressionWithOperator>
            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[rowCounter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[rowCounter+1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ui:InterruptibleWhile.Body>
        <ui:InterruptibleWhile.Condition>
          <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="rowCounter &lt; out_SortedDataTable.RowCount-1" />
        </ui:InterruptibleWhile.Condition>
      </ui:InterruptibleWhile>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="531.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_7" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:Int32">[out_FilteredDataTableRowCount]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="531.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_8" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:String">[out_NameInEntry]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:String">["text"]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="531.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_9" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:Int32">[out_FilteredDataTableAfterRowRemovalRowCount]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:Int32">[out_FilteredDataTableRowCount-1]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="531.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_10" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:Int32">[out_FilteredDataTableAfterColumnRemovalColumnCount]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:Int32">[out_FilteredDataTableColumnCount-1]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="531.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_11" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:String">[out_MyDataTableAfterItemUpdate.Rows(2)("Name").ToString]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:String">[in_NewValueForUpdateRowItem]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="531.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_12" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:Int32">[out_FilteredDataTableAfterClear.RowCount]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
    </Sequence>
  </Sequence>
</Activity>