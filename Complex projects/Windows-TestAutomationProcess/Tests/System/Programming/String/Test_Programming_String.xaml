<Activity mc:Ignorable="sap sap2010" x:Class="Test_Programming_String" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System.Text.RegularExpressions" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_FindMatchingPatternsResult" Type="OutArgument(scg:List(str:Match))" />
    <x:Property Name="in_ModifyText_SearchFor" Type="InArgument(x:String)" />
    <x:Property Name="in_ModifyText_ReplaceWith" Type="InArgument(x:String)" />
    <x:Property Name="out_ModifyText_Result" Type="OutArgument(x:String)" />
    <x:Property Name="in_Replace_Pattern" Type="InArgument(x:String)" />
    <x:Property Name="in_Replace_Replacement" Type="InArgument(x:String)" />
    <x:Property Name="in_Replace_TextToReplace" Type="InArgument(x:String)" />
    <x:Property Name="out_Replace_Result" Type="OutArgument(x:String)" />
    <x:Property Name="in_TextToLeftRight_FullText" Type="InArgument(x:String)" />
    <x:Property Name="in_TextToLeftRight_Separator" Type="InArgument(x:String)" />
    <x:Property Name="out_TextToLeftRight_TextToLeft" Type="OutArgument(x:String)" />
    <x:Property Name="out_TextToLeftRight_TextToRight" Type="OutArgument(x:String)" />
    <x:Property Name="in_IsTextMatching_Pattern" Type="InArgument(x:String)" />
    <x:Property Name="in_IsTextMatching_TextToSearchIn" Type="InArgument(x:String)" />
    <x:Property Name="out_IsTextMatching_Result" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_FindMatchingPatterns_Input" Type="InArgument(x:String)" />
    <x:Property Name="in_FindMatchingPatterns_Pattern" Type="InArgument(x:String)" />
    <x:Property Name="in_ModifyText_TextToModify" Type="InArgument(x:String)" />
  </x:Members>
  <this:Test_Programming_String.in_ModifyText_SearchFor>
    <InArgument x:TypeArguments="x:String" />
  </this:Test_Programming_String.in_ModifyText_SearchFor>
  <this:Test_Programming_String.in_ModifyText_ReplaceWith>
    <InArgument x:TypeArguments="x:String" />
  </this:Test_Programming_String.in_ModifyText_ReplaceWith>
  <this:Test_Programming_String.in_Replace_Pattern>
    <InArgument x:TypeArguments="x:String" />
  </this:Test_Programming_String.in_Replace_Pattern>
  <this:Test_Programming_String.in_Replace_Replacement>
    <InArgument x:TypeArguments="x:String" />
  </this:Test_Programming_String.in_Replace_Replacement>
  <this:Test_Programming_String.in_TextToLeftRight_FullText>
    <InArgument x:TypeArguments="x:String" />
  </this:Test_Programming_String.in_TextToLeftRight_FullText>
  <this:Test_Programming_String.in_TextToLeftRight_Separator>
    <InArgument x:TypeArguments="x:String" />
  </this:Test_Programming_String.in_TextToLeftRight_Separator>
  <this:Test_Programming_String.in_IsTextMatching_Pattern>
    <InArgument x:TypeArguments="x:String" />
  </this:Test_Programming_String.in_IsTextMatching_Pattern>
  <this:Test_Programming_String.in_IsTextMatching_TextToSearchIn>
    <InArgument x:TypeArguments="x:String" />
  </this:Test_Programming_String.in_IsTextMatching_TextToSearchIn>
  <this:Test_Programming_String.in_FindMatchingPatterns_Input>
    <InArgument x:TypeArguments="x:String" />
  </this:Test_Programming_String.in_FindMatchingPatterns_Input>
  <this:Test_Programming_String.in_FindMatchingPatterns_Pattern>
    <InArgument x:TypeArguments="x:String" />
  </this:Test_Programming_String.in_FindMatchingPatterns_Pattern>
  <this:Test_Programming_String.in_ModifyText_TextToModify>
    <InArgument x:TypeArguments="x:String" />
  </this:Test_Programming_String.in_ModifyText_TextToModify>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1343.2,2952</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Test_Programming_String_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Test_Programming_String" sap:VirtualizedContainerService.HintSize="548,2887.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="... Given" sap:VirtualizedContainerService.HintSize="485.6,996" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Set input for Is Text Matching activity" sap:VirtualizedContainerService.HintSize="423.2,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_IsTextMatching_TextToSearchIn]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">testabc</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_IsTextMatching_Pattern]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">abc</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ui:MultipleAssign DisplayName="Set input for Find Matching Patterns activity" sap:VirtualizedContainerService.HintSize="423.2,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_FindMatchingPatterns_Input]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">testabcabcdeabcdeabcdeabcde</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_FindMatchingPatterns_Pattern]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">abc</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ui:MultipleAssign DisplayName="Set input for Modify Text activity" sap:VirtualizedContainerService.HintSize="423.2,164" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_ModifyText_TextToModify]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">testabcabcdeatesttesteabcdetest</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_ModifyText_SearchFor]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">test</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_ModifyText_ReplaceWith]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">gigi</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ui:MultipleAssign DisplayName="Set input for Replace activity" sap:VirtualizedContainerService.HintSize="423.2,164" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_Replace_TextToReplace]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">testtestabctecstdtestbcdteseatabcttdtestabcdetesttesttesttesttesttesttest</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_Replace_Pattern]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">test</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_Replace_Replacement]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">x</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ui:MultipleAssign DisplayName="Set input for Text To Left/Right activity" sap:VirtualizedContainerService.HintSize="423.2,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_TextToLeftRight_FullText]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">Ana are mere</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">[in_TextToLeftRight_Separator]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve"> are </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
    </Sequence>
    <Sequence DisplayName="... When" sap:VirtualizedContainerService.HintSize="485.6,225.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="System\Programming\String\String_Workflow.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="System\Programming\String\String_Workflow.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="scg:List(str:Match)" x:Key="out_FindMatchingPatternsResult">
            <VisualBasicReference x:TypeArguments="scg:List(str:Match)" ExpressionText="out_FindMatchingPatternsResult" />
          </OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ModifyText_SearchFor">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ModifyText_SearchFor" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ModifyText_ReplaceWith">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ModifyText_ReplaceWith" />
          </InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_ModifyText_Result">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="out_ModifyText_Result" />
          </OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Replace_Pattern">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Replace_Pattern" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Replace_Replacement">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Replace_Replacement" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Replace_TextToReplace">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Replace_TextToReplace" />
          </InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_Replace_Result">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="out_Replace_Result" />
          </OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_TextToLeftRight_FullText">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TextToLeftRight_FullText" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_TextToLeftRight_Separator">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TextToLeftRight_Separator" />
          </InArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_TextToLeftRight_TextToLeft">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="out_TextToLeftRight_TextToLeft" />
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="out_TextToLeftRight_TextToRight">
            <VisualBasicReference x:TypeArguments="x:String" ExpressionText="out_TextToLeftRight_TextToRight" />
          </OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_IsTextMatching_Pattern">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_IsTextMatching_Pattern" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_IsTextMatching_TextToSearchIn">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_IsTextMatching_TextToSearchIn" />
          </InArgument>
          <OutArgument x:TypeArguments="x:Boolean" x:Key="out_IsTextMatching_Result">
            <VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="out_IsTextMatching_Result" />
          </OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_FindMatchingPatterns_Input">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_FindMatchingPatterns_Input" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_FindMatchingPatterns_Pattern">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_FindMatchingPatterns_Pattern" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_ModifyText_TextToModify">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ModifyText_TextToModify" />
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <Sequence DisplayName="... Then" sap:VirtualizedContainerService.HintSize="485.6,1473.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="387.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_1" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:Boolean">[out_IsTextMatching_Result]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:Boolean">[true]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="387.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_2" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:Int32">[out_FindMatchingPatternsResult.Count]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:Int32">[5]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="387.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_3" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:String">[out_ModifyText_Result]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:String">["gigiabcabcdeagigigigieabcdegigi"]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="387.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_4" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:String">[out_Replace_Result]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:String">["xxabctecstdxbcdteseatabcttdxabcdexxxxxxx"]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="387.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_5" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:String">[out_TextToLeftRight_TextToLeft]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:String">["Ana"]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
      <uta:VerifyExpressionWithOperator AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression with Operator" sap:VirtualizedContainerService.HintSize="387.2,193.6" sap2010:WorkflowViewState.IdRef="VerifyExpressionWithOperator_6" Operator="Equality" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyExpressionWithOperator.FirstExpression>
          <InArgument x:TypeArguments="x:String">[out_TextToLeftRight_TextToRight]</InArgument>
        </uta:VerifyExpressionWithOperator.FirstExpression>
        <uta:VerifyExpressionWithOperator.SecondExpression>
          <InArgument x:TypeArguments="x:String">["mere"]</InArgument>
        </uta:VerifyExpressionWithOperator.SecondExpression>
      </uta:VerifyExpressionWithOperator>
    </Sequence>
  </Sequence>
</Activity>