<Activity mc:Ignorable="sap sap2010" x:Class="Test_Collections" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:uasc="clr-namespace:UiPath.Activities.System.Collections;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_NewCollection" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="in_ShouldExist" Type="InArgument(x:Boolean)" />
    <x:Property Name="out_ElementExists" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_CollectionAfterAppend" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="out_FilteredCollection1" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="out_FilteredCollection2" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="out_MergedCollection" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="out_CollectionRemoved" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="out_DataTableFromCollection" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_CollectionRemoveAll" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="in_ElementsToAppend" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="out_ElementPositionIfExists" Type="OutArgument(x:Int32)" />
  </x:Members>
  <this:Test_Collections.in_ShouldExist>
    <InArgument x:TypeArguments="x:Boolean" />
  </this:Test_Collections.in_ShouldExist>
  <this:Test_Collections.in_ElementsToAppend>
    <InArgument x:TypeArguments="scg:List(x:String)" />
  </this:Test_Collections.in_ElementsToAppend>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1198.4,3884.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Test_Collections_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Testing</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="49">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Test_Collections" sap:VirtualizedContainerService.HintSize="756,3820" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="... Given" sap:VirtualizedContainerService.HintSize="693.6,234.4" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="430.4,111.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[in_ElementsToAppend]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[new List(Of String)({"test", "12345", "abc", "YtG2x1", "!fdkjn", "hsdlkn", "psdkjb"})]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
    </Sequence>
    <Sequence DisplayName="... When" sap:VirtualizedContainerService.HintSize="693.6,246.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Collections\Collections_Workflow.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="337.6,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Collections\Collections_Workflow.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_NewCollection">
            <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="out_NewCollection" />
          </OutArgument>
          <InArgument x:TypeArguments="x:Boolean" x:Key="in_ShouldExist">
            <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="in_ShouldExist" />
          </InArgument>
          <OutArgument x:TypeArguments="x:Boolean" x:Key="out_ElementExists">
            <VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="out_ElementExists" />
          </OutArgument>
          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_CollectionAfterAppend">
            <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="out_CollectionAfterAppend" />
          </OutArgument>
          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_FilteredCollection1">
            <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="out_FilteredCollection1" />
          </OutArgument>
          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_FilteredCollection2">
            <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="out_FilteredCollection2" />
          </OutArgument>
          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_MergedCollection">
            <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="out_MergedCollection" />
          </OutArgument>
          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_CollectionRemoved">
            <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="out_CollectionRemoved" />
          </OutArgument>
          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_DataTableFromCollection">
            <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="out_DataTableFromCollection" />
          </OutArgument>
          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_CollectionRemoveAll">
            <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="out_CollectionRemoveAll" />
          </OutArgument>
          <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_ElementsToAppend">
            <VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="in_ElementsToAppend" />
          </InArgument>
          <OutArgument x:TypeArguments="x:Int32" x:Key="out_ElementPositionIfExists">
            <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="out_ElementPositionIfExists" />
          </OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <Sequence DisplayName="... Then" sap:VirtualizedContainerService.HintSize="693.6,3136" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression" Expression="[out_NewCollection.Count = 5]" sap:VirtualizedContainerService.HintSize="631.2,133.6" sap2010:WorkflowViewState.IdRef="VerifyExpression_1" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
      <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression" Expression="[out_ElementExists = in_ShouldExist]" sap:VirtualizedContainerService.HintSize="631.2,133.6" sap2010:WorkflowViewState.IdRef="VerifyExpression_2" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
      <If Condition="[in_ShouldExist]" sap:VirtualizedContainerService.HintSize="631.2,679.2" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="400,256.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression" Expression="[out_ElementPositionIfExists = 2]" sap:VirtualizedContainerService.HintSize="337.6,133.6" sap2010:WorkflowViewState.IdRef="VerifyExpression_7" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="400,256.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression" Expression="[out_ElementPositionIfExists = -1]" sap:VirtualizedContainerService.HintSize="337.6,133.6" sap2010:WorkflowViewState.IdRef="VerifyExpression_8" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
          </Sequence>
        </If.Else>
      </If>
      <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression" Expression="[out_CollectionAfterAppend.Count = out_NewCollection.Count + in_ElementsToAppend.Count]" sap:VirtualizedContainerService.HintSize="631.2,133.6" sap2010:WorkflowViewState.IdRef="VerifyExpression_3" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="631.2,562.4" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[out_CollectionAfterAppend]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="596,428" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <uta:VerifyControlAttribute AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Control Attribute" sap:VirtualizedContainerService.HintSize="533.6,304.8" sap2010:WorkflowViewState.IdRef="VerifyControlAttribute_1" Operator="Equality" OutputArgument="Exists" TakeScreenshotInCaseOfFailingAssertion="True" TakeScreenshotInCaseOfSucceedingAssertion="False">
                <uta:VerifyControlAttribute.ActivityToTest>
                  <ActivityAction>
                    <uasc:ExistsInCollection x:TypeArguments="x:String" Collection="[out_CollectionAfterAppend]" DisplayName="Exists in collection" sap:VirtualizedContainerService.HintSize="334.4,185.6" sap2010:WorkflowViewState.IdRef="ExistsInCollection`1_2" Item="[currentItem]">
                      <uasc:ExistsInCollection.Exists>
                        <OutArgument x:TypeArguments="x:Boolean">
                          <VariableReference x:TypeArguments="x:Boolean">
                            <VariableReference.Variable>
                              <Variable x:TypeArguments="x:Boolean" x:Name="__ReferenceID0" Name="_autogenerated_Exists" />
                            </VariableReference.Variable>
                          </VariableReference>
                        </OutArgument>
                      </uasc:ExistsInCollection.Exists>
                      <uasc:ExistsInCollection.Index>
                        <OutArgument x:TypeArguments="x:Int32">
                          <VariableReference x:TypeArguments="x:Int32">
                            <VariableReference.Variable>
                              <Variable x:TypeArguments="x:Int32" Name="_autogenerated_Index" />
                            </VariableReference.Variable>
                          </VariableReference>
                        </OutArgument>
                      </uasc:ExistsInCollection.Index>
                    </uasc:ExistsInCollection>
                  </ActivityAction>
                </uta:VerifyControlAttribute.ActivityToTest>
                <uta:VerifyControlAttribute.ArgumentsBridgeActivity>
                  <ActivityFunc x:TypeArguments="x:Object">
                    <uta:ArgumentsBridge sap2010:WorkflowViewState.IdRef="ArgumentsBridge_1">
                      <uta:ArgumentsBridge.Input>
                        <InArgument x:TypeArguments="x:Object">
                          <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID0}" />
                        </InArgument>
                      </uta:ArgumentsBridge.Input>
                    </uta:ArgumentsBridge>
                  </ActivityFunc>
                </uta:VerifyControlAttribute.ArgumentsBridgeActivity>
                <uta:VerifyControlAttribute.Expression>
                  <InArgument x:TypeArguments="x:Boolean">[true]</InArgument>
                </uta:VerifyControlAttribute.Expression>
              </uta:VerifyControlAttribute>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
      <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression" Expression="[out_CollectionRemoved.Count = out_NewCollection.Count - 2]" sap:VirtualizedContainerService.HintSize="631.2,133.6" sap2010:WorkflowViewState.IdRef="VerifyExpression_4" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
      <uta:VerifyControlAttribute AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Control Attribute" sap:VirtualizedContainerService.HintSize="631.2,304.8" sap2010:WorkflowViewState.IdRef="VerifyControlAttribute_2" Operator="Equality" OutputArgument="Exists" TakeScreenshotInCaseOfFailingAssertion="True" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyControlAttribute.ActivityToTest>
          <ActivityAction>
            <uasc:ExistsInCollection x:TypeArguments="x:String" Collection="[out_CollectionRemoved]" DisplayName="Exists in collection" sap:VirtualizedContainerService.HintSize="334.4,185.6" sap2010:WorkflowViewState.IdRef="ExistsInCollection`1_5" Item="Element 1">
              <uasc:ExistsInCollection.Exists>
                <OutArgument x:TypeArguments="x:Boolean">
                  <VariableReference x:TypeArguments="x:Boolean">
                    <VariableReference.Variable>
                      <Variable x:TypeArguments="x:Boolean" x:Name="__ReferenceID1" Name="_autogenerated_Exists" />
                    </VariableReference.Variable>
                  </VariableReference>
                </OutArgument>
              </uasc:ExistsInCollection.Exists>
              <uasc:ExistsInCollection.Index>
                <OutArgument x:TypeArguments="x:Int32">
                  <VariableReference x:TypeArguments="x:Int32">
                    <VariableReference.Variable>
                      <Variable x:TypeArguments="x:Int32" Name="_autogenerated_Index" />
                    </VariableReference.Variable>
                  </VariableReference>
                </OutArgument>
              </uasc:ExistsInCollection.Index>
            </uasc:ExistsInCollection>
          </ActivityAction>
        </uta:VerifyControlAttribute.ActivityToTest>
        <uta:VerifyControlAttribute.ArgumentsBridgeActivity>
          <ActivityFunc x:TypeArguments="x:Object">
            <uta:ArgumentsBridge sap2010:WorkflowViewState.IdRef="ArgumentsBridge_2">
              <uta:ArgumentsBridge.Input>
                <InArgument x:TypeArguments="x:Object">
                  <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID1}" />
                </InArgument>
              </uta:ArgumentsBridge.Input>
            </uta:ArgumentsBridge>
          </ActivityFunc>
        </uta:VerifyControlAttribute.ArgumentsBridgeActivity>
        <uta:VerifyControlAttribute.Expression>
          <InArgument x:TypeArguments="x:Boolean">[False]</InArgument>
        </uta:VerifyControlAttribute.Expression>
      </uta:VerifyControlAttribute>
      <uta:VerifyControlAttribute AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Control Attribute" sap:VirtualizedContainerService.HintSize="631.2,304.8" sap2010:WorkflowViewState.IdRef="VerifyControlAttribute_3" Operator="Equality" OutputArgument="Exists" TakeScreenshotInCaseOfFailingAssertion="True" TakeScreenshotInCaseOfSucceedingAssertion="False">
        <uta:VerifyControlAttribute.ActivityToTest>
          <ActivityAction>
            <uasc:ExistsInCollection x:TypeArguments="x:String" Collection="[out_CollectionRemoved]" DisplayName="Exists in collection" sap:VirtualizedContainerService.HintSize="334.4,185.6" sap2010:WorkflowViewState.IdRef="ExistsInCollection`1_4" Item="Element 3">
              <uasc:ExistsInCollection.Exists>
                <OutArgument x:TypeArguments="x:Boolean">
                  <VariableReference x:TypeArguments="x:Boolean">
                    <VariableReference.Variable>
                      <Variable x:TypeArguments="x:Boolean" x:Name="__ReferenceID2" Name="_autogenerated_Exists" />
                    </VariableReference.Variable>
                  </VariableReference>
                </OutArgument>
              </uasc:ExistsInCollection.Exists>
              <uasc:ExistsInCollection.Index>
                <OutArgument x:TypeArguments="x:Int32">
                  <VariableReference x:TypeArguments="x:Int32">
                    <VariableReference.Variable>
                      <Variable x:TypeArguments="x:Int32" Name="_autogenerated_Index" />
                    </VariableReference.Variable>
                  </VariableReference>
                </OutArgument>
              </uasc:ExistsInCollection.Index>
            </uasc:ExistsInCollection>
          </ActivityAction>
        </uta:VerifyControlAttribute.ActivityToTest>
        <uta:VerifyControlAttribute.ArgumentsBridgeActivity>
          <ActivityFunc x:TypeArguments="x:Object">
            <uta:ArgumentsBridge sap2010:WorkflowViewState.IdRef="ArgumentsBridge_3">
              <uta:ArgumentsBridge.Input>
                <InArgument x:TypeArguments="x:Object">
                  <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID2}" />
                </InArgument>
              </uta:ArgumentsBridge.Input>
            </uta:ArgumentsBridge>
          </ActivityFunc>
        </uta:VerifyControlAttribute.ArgumentsBridgeActivity>
        <uta:VerifyControlAttribute.Expression>
          <InArgument x:TypeArguments="x:Boolean">[False]</InArgument>
        </uta:VerifyControlAttribute.Expression>
      </uta:VerifyControlAttribute>
      <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression" Expression="[out_DataTableFromCollection.Rows.Count = out_NewCollection.Count]" sap:VirtualizedContainerService.HintSize="631.2,133.6" sap2010:WorkflowViewState.IdRef="VerifyExpression_5" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
      <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" OutputMessageFormat="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Verify Expression" Expression="[out_CollectionRemoveAll.Count = 0]" sap:VirtualizedContainerService.HintSize="631.2,133.6" sap2010:WorkflowViewState.IdRef="VerifyExpression_6" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="False" />
    </Sequence>
  </Sequence>
</Activity>