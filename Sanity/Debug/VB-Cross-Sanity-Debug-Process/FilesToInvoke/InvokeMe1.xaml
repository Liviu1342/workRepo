<Activity mc:Ignorable="sap sap2010" x:Class="InvokeMe1" this:InvokeMe1.myStringArg1="test" this:InvokeMe1.myList="[new List(Of String)]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:uasc="clr-namespace:UiPath.Activities.System.Collections;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="myStringArg1" Type="InArgument(x:String)" />
    <x:Property Name="myList" Type="InArgument(scg:List(x:String))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1217.6,3303.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>InvokeMe1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="InvokeMe1" sap:VirtualizedContainerService.HintSize="688,3238.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="counter">
        <Variable.Default>
          <Literal x:TypeArguments="x:Int32" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="646.4,140.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[LogLevel.Warn]" Message="[&quot;Running InvokeMe1.xaml&quot;]" />
    <If Condition="[myStringArg1.Length = 0]" sap:VirtualizedContainerService.HintSize="646.4,449.6" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="441.6,192" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Throw Exception="[new Exception(&quot;Cannot create a list having &quot; + myStringArg1.Length.ToString + &quot; elements!&quot;)]" sap:VirtualizedContainerService.HintSize="400,89.6" sap2010:WorkflowViewState.IdRef="Throw_1" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="400,94.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="646.4,140.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[LogLevel.Info]" Message="[&quot;The list will contain &quot; + myStringArg1.Length.ToString + &quot; elements&quot;]" />
    <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="646.4,646.4" sap2010:WorkflowViewState.IdRef="DoWhile_1">
      <DoWhile.Condition>
        <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="counter &lt; myStringArg1.Length" />
      </DoWhile.Condition>
      <Sequence sap:VirtualizedContainerService.HintSize="441.6,474.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="400,69.6" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[counter+1]</InArgument>
          </Assign.Value>
        </Assign>
        <uasc:AppendItemToCollection x:TypeArguments="x:String" Collection="[myList]" DisplayName="Append item to collection" sap:VirtualizedContainerService.HintSize="400,262.4" sap2010:WorkflowViewState.IdRef="AppendItemToCollection`1_1" Result="[myList]">
          <uasc:AppendItemToCollection.Items>
            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
              <InArgument x:TypeArguments="x:String">[string.Format("{0} + {1}.toString", myStringArg1, counter.ToString)]</InArgument>
            </scg:List>
          </uasc:AppendItemToCollection.Items>
        </uasc:AppendItemToCollection>
      </Sequence>
    </DoWhile>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each" sap:VirtualizedContainerService.HintSize="646.4,733.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[myList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
          </ActivityAction.Argument>
          <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="564.8,524.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[currentItem.Contains(&quot;4&quot;) = true AND myList.Count &gt; 3]" sap:VirtualizedContainerService.HintSize="523.2,422.4" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="441.6,164.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uasc:RemoveFromCollection x:TypeArguments="x:String" Index="{x:Null}" Collection="[myList]" DisplayName="Remove from collection" sap:VirtualizedContainerService.HintSize="400,62.4" sap2010:WorkflowViewState.IdRef="RemoveFromCollection`1_1" Item="[string.Format(&quot;{0}&quot;, currentItem)]" RemoveAllElements="False" Result="[myList]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </uasc:RemoveFromCollection>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="400,94.4" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <If Condition="[myList.Count &lt;&gt; myStringArg1.Length-1]" sap:VirtualizedContainerService.HintSize="646.4,644" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="441.6,243.2" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,140.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="[LogLevel.Error]" Message="[&quot;The list does not have the expected number of elements!! Expected &quot; + (myStringArg1.Length-1).ToString + &quot;, but found &quot; + myList.Count.ToString() + &quot; elements&quot;]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="441.6,243.2" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="400,140.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="[LogLevel.Info]" Message="[&quot;Success!!!&quot;]" />
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="646.4,140.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="[LogLevel.Warn]" Message="[&quot;Exiting InvokeMe1&quot;]" />
  </Sequence>
</Activity>